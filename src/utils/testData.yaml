login:
  valid:
    email: "sanduni.gunawardhana@ivedha.com"
    password: "Sandu@123"
  invalid:
    invalidusername: "invaliduser@email.com"
    invalidpassword: "wrong_password"
  empty:
    emptyusername: ""
    emptypassword: ""
  error:
    expectedErrorMessageWrongMail: "Invalid email address."
    expectedErrorMessageWrongPassword: "Invalid login. Please try again."
    expectedErrorMessageEmpty: "Required field"

application:
  valid:
    appName: "Test-App-Automation"
    description: "Sample App"
    owner: "guests"
  edit:
    updatedAppName: "Edited-Application"
    updatedDescription: "Edited App Description"
    updatedOwner: "admins"
  successMessage:
    expectedMessageOnboarded: "System Onboarded Successfully!"
    expectedMessageUpdated: "System Updated Successfully!"
  MyApp:
    name: "MyApp"
    description: "This is the description of MyApp"
    tags:
      - "tag1"
      - "tag2"
    owner: "Owner1"

component:
  comp:
    valid:
      kind: "component"
      compName: "TestComponentAuto"
      description: "Sample Component"
      owner: "guests"
      type: "website"
      environment: "development"
      scOption: "Github"
      repoLink: "https://github.com/ivedha-tech/platformnex-frontend"
      gcpProjectID: "prj-dev-platform-next"
    edit:
      updatedDescription: "Edited Comp Description"
      updatedType: "service"
      updateEnvironment: "production"
    successMessage:
      expectedMessageOnboarded: "Component Onboarded Successfully!"
      expectedMessageUpdated: "Component Updated Successfully!"
  MyComponent:
    name: "MyComponent"
    description: "This is the description of MyComponent"
    tags:
      - "compTag1"
      - "compTag2"
    owner: "Owner1"

api:
  comp:
    valid:
      kind: "api"
      apiName: "TestAPI"
      description: "Sample API"
      owner: "guests"
      type: "openapi"
      environment: "development"
      scOption: "Github"
      repoLink: "https://github.com/ivedha-tech/platformnex-frontend"
      apiDefinition: "Defining the api"
      gcpProjectID: "prj-dev-platform-next"
    edit:
      updatedDescription: "Edited API Description"
      updatedType: "graphql"
      updatedApiDefinition: "Edited API definition"
    successMessage:
      expectedMessageOnboarded: "API Onboarded Successfully!"
      expectedMessageUpdated: "API Updated Successfully!"
  MyAPI:
    name: "MyAPI"
    description: "This is the description of MyAPI"
    annotations:
      - "annotation1"
      - "annotation2"
    owner: "Owner1"

resource:
  comp:
    valid:
      kind: "resource"
      resourceName: "TestRes"
      description: "Sample Resource"
      owner: "guests"
      type: "Database"
      environment: "development"
      gcpProjectID: "prj-dev-platform-next"
    edit:
      updatedResourceName: "EditedRes"
      updatedDescription: "Edited Resource Description"
      updatedOwner: "admins"
      updatedType: "Cache"
      updatedTags: "ResTag1,ResTag2,ResTag3"
    successMessage:
      expectedMessageOnboarded: "Resource Onboarded Successfully!"
      expectedMessageUpdated: "Resource Updated Successfully!"

quickstart:
  basicinfo:
    name: "anyone556"
    description: "Anything"
    owner: "guests"
    system: "Platformnex"
  frontend:
    repoOwner: "ivedha-tech"
    repoName: "anyonefrontend4523"
    serviceName: "anyoneservicefrontend4523"
    serviceDescription: "anything"
  backend:
    repoOwner: "ivedha-tech"
    repoName: "anyone556"
    serviceName: "anyonerunservicebackend"
    serviceDescription: "Anything"
    dependOnService: "xdvsdv"
    dbServiceName: "anyone556name"
    dbName: "anyone556namebackend"
    dbPassword: "Pass@123"
  infrastructure:
    project: "prj-dev-platform-next"

devops:
  compKind: "Component"
  componentName: "devops-auto-test-component"
  description: "DevOps QA component"
  owner: "guests"
  type: "website"
  environment: "development"
  providerOption: "Github"
  repoUrl: "https://github.com/ivedha-tech/platformnex_qa_automation"
  gcpProjectID: "prj-dev-platform-next"

  expected:
    sonarMissingHeading: "Missing Plugin SonarQube"
    sonarSetupInProgressHeading: "SonarQube Setup in Progress"
    prTitlePrefix: "Onboard SonarQube:"
    codeQualityCards:
      - "Reliability"
      - "Security"
      - "Maintainability"
      - "Hotspots Reviewed"
      - "Coverage"
      - "Duplications"