login:
  valid:
    email: "sanduni.gunawardhana@ivedha.com"
    password: "Sanduni@1234"
  invalid:
    invalidusername: "invaliduser@email.com"
    invalidpassword: "wrong_password"
  empty:
    emptyusername: ""
    emptypassword: ""
  error:
    expectedErrorMessageWrongMail: "Invalid email address."
    expectedErrorMessageWrongPassword: "Invalid login. Please try again."
    expectedErrorMessageEmpty: "Required field"

application:
  valid:
    appName: "Test-App-Automation"
    description: "Sample App"
    owner: "guests"
  edit:
    updatedAppName: "Edited-Application"
    updatedDescription: "Edited App Description"
    updatedOwner: "admins"
  successMessage:
    expectedMessageOnboarded: "System Onboarded Successfully!"
    expectedMessageUpdated: "System Updated Successfully!"
  MyApp:
    name: "MyApp"
    description: "This is the description of MyApp"
    tags:
      - "tag1"
      - "tag2"
    owner: "Owner1"

component:
  compData:
    valid:
      compkind: "component"
      compName: "test-automation-comp"
      compdescription: "Sample Component"
      compowner: "guests"
      comptype: "website"
      compenvironment: "development"
      compscOption: "Github"
      repoLink: "https://github.com/ivedha-tech/test-qa-f-15"
      compgcpProjectID: "prj-dev-platform-next"
    edit:
      compupdatedDescription: "Edited Comn Description"
      compupdatedType: "service"
      compupdatedEnvironment: "production"
    successMessage:
      compexpectedMessageOnboarded: "Component Onboarded Successfully!"
      compexpectedMessageUpdated: "Component Updated Successfully!"
  MyComponent:
    name: "MyComponent"
    description: "This is the description of MyComponent"
    tags:
      - "compTag1"
      - "compTag2"
    owner: "Owner1"

api:
  apiData:
    valid:
      apikind: "api"
      apiName: "TestAPI"
      apidescription: "Sample API"
      apiowner: "guests"
      apitype: "openapi"
      apienvironment: "development"
      apiscOption: "Github"
      apirepoLink: "https://github.com/ivedha-tech/test-qa-f-15"
      apiDefinition: "Defining the api"
      apigcpProjectID: "prj-dev-platform-next"
    edit:
      apiupdatedDescription: "Edited API Description"
      apiupdatedType: "graphql"
      apiupdatedApiDefinition: "Edited API definition"
    successMessage:
      apiexpectedMessageOnboarded: "API Onboarded Successfully!"
      apiexpectedMessageUpdated: "API Updated Successfully!"
  MyAPI:
    name: "MyAPI"
    description: "This is the description of MyAPI"
    annotations:
      - "annotation1"
      - "annotation2"
    owner: "Owner1"

resource:
  resData:
    valid:
      reskind: "resource"
      resourceName: "TestRes"
      resdescription: "Sample Resource"
      resowner: "guests"
      restype: "Database"
      resenvironment: "development"
      resgcpProjectID: "prj-dev-platform-next"
    edit:
      resupdatedResourceName: "EditedRes"
      resupdatedDescription: "Edited Resource Description"
      resupdatedOwner: "admins"
      resupdatedType: "Cache"
      resupdatedTags: "ResTag1,ResTag2,ResTag3"
    successMessage:
      resexpectedMessageOnboarded: "Resource Onboarded Successfully!"
      resexpectedMessageUpdated: "Resource Updated Successfully!"

quickstart:
  basicinfo:
    name: "done23"
    description: "Anything"
    owner: "guests"
    system: "Regression-test"
  frontend:
    repoOwner: "ivedha-tech"
    repoName: "done23f"
    serviceName: "done23servicefront"
    serviceDescription: "anything"
  backend:
    repoOwner: "ivedha-tech"
    repoName: "doneb23b"
    serviceName: "done23servicebackennd"
    serviceDescription: "Anything"
    dependOnService: "donerepo"
    dbServiceName: "done23dbname"
    dbName: "donedbnamebackend"
    dbPassword: "Pass@123"
  infrastructure:
    project: "prj-dev-platform-next"

jira:
  search:
    byId: "155"
    bySummary: "Start sending emails"
  filters:
    project: "All Projects"
    epic: "All Epics"
    sprint: "Today"
    status: "All Status"

cloudops:
  resource:
    name: "aimic1"
    type: "storage"
  database:
    instanceName: "aicloudops1"
    version: "PostgreSQL 15"
    dbName: "tey230db1"
    username: "dbtey2301"
    password: "Admin@42"

gcp:
  projectId: "prj-dev-platform-next"

finops:
  gcpprojectid: "prj-dev-platform-next"
  gcpdatasetid: "ds_billing"
  gcptableid: "gcp_billing_export_resource_v1_01E9B5_60A8A4_E1FE52"

sre:
  cloudrun:
    projectSlug: "prj-dev-platform-next"
    serviceName: "platformnex-v2-frontend-dit2"
    location: "us-central1"

devops:
  compKind: "Component"
  componentName: "devops-auto-test-component"
  description: "DevOps QA component"
  owner: "guests"
  type: "website"
  environment: "development"
  providerOption: "Github"
  repoUrl: "https://github.com/ivedha-tech/test-qa-f-15"
  gcpProjectID: "prj-dev-platform-next"
  expected:
    sonarMissingHeading: "Missing Plugin SonarQube"
    sonarSetupInProgressHeading: "SonarQube Setup in Progress"
    prTitlePrefix: "Onboard SonarQube:"
    codeQualityCards:
      - "Reliability"
      - "Security"
      - "Maintainability"
      - "Hotspots Reviewed"
      - "Coverage"
      - "Duplications"